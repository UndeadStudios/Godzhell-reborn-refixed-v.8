buildscript {
    repositories {
        flatDir {
            dirs 'deps'  // Local folder for manual JARs
        }
    }
    dependencies {
        classpath name: 'kotlin-gradle-plugin-1.9.20'
    }
}
plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.9.20'  // Kotlin plugin version for Gradle 6.7
}
java {
    sourceCompatibility = JavaVersion.VERSION_11  // Use JDK 11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()  // Standard Maven repository
}

dependencies {
    implementation fileTree(dir: 'deps', include: ['*.jar'])  // Local JARs in 'deps' folder
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.9.20' // Kotlin 1.5.21 for JDK 8
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.11.0'
// https://mvnrepository.com/artifact/io.netty/netty
    implementation group: 'io.netty', name: 'netty', version: '3.6.6.Final'
// https://mvnrepository.com/artifact/org.jfree/jfreechart
    implementation group: 'org.jfree', name: 'jfreechart', version: '1.5.5'
// https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.13.0'
// https://mvnrepository.com/artifact/com.squareup.okio/okio
    implementation group: 'com.squareup.okio', name: 'okio', version: '1.17.2'
// https://mvnrepository.com/artifact/log4j/log4j
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'

}

application {
    mainClass = 'server'  // The default main class
}

// Define additional run tasks for FileServer
tasks.register('runFileServer', JavaExec) {
    group = 'application'
    description = 'Runs the FileServer'
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.Ghreborn.jagcached.FileServer'  // Specify the FileServer main class
}
sourceSets {
    main {
        java {
            srcDir 'src/main/java'  // Java and Kotlin files in the same folder
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'  // Set UTF-8 encoding
}

test {
    useJUnitPlatform()  // JUnit testing for Gradle
}
